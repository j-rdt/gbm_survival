vertex.label=paste(my_labels, ranked_list, sep="\n"),
#vertex.label= sums20,
vertex.size=logb(ranked_list, b=3)*2,
#     edge.label=E(network)$weight,
edge.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
edge.label.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
#             edge.label.x=center_igraph_edges(network, "x"),
#             edge.label.y=center_igraph_edges(network, "y"),
vertex.label.cex=1,
vertex.label.dist=1,
vertex.label.degree=lab.locs,
vertex.label.family="sans",
#     edge.label.cex=0.4,
ylim=c(-1,1), xlim=c(-1,1), asp=1, margins=10
)
dev.off()
getwd()
tiff("ana-network.tiff", height=5600, width = 5600, units="px", res=300)
plot.igraph(network, rescale=F, layout=layout.circle,
vertex.label=paste(my_labels, ranked_list, sep="\n"),
#vertex.label= sums20,
vertex.size=logb(ranked_list, b=3),
#     edge.label=E(network)$weight,
edge.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
edge.label.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
#             edge.label.x=center_igraph_edges(network, "x"),
#             edge.label.y=center_igraph_edges(network, "y"),
vertex.label.cex=1,
vertex.label.dist=1,
vertex.label.degree=lab.locs,
vertex.label.family="sans",
#     edge.label.cex=0.4,
ylim=c(-1,1), xlim=c(-1,1), asp=1, margins=10
)
dev.off()
tiff("ana-network.tiff", height=5600, width = 5600, units="px", res=300)
plot.igraph(network, rescale=F, layout=layout.circle,
vertex.label=paste(my_labels, ranked_list, sep="\n"),
#vertex.label= sums20,
vertex.size=logb(ranked_list, b=3),
#     edge.label=E(network)$weight,
edge.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
edge.label.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
#             edge.label.x=center_igraph_edges(network, "x"),
#             edge.label.y=center_igraph_edges(network, "y"),
vertex.label.cex=1,
vertex.label.dist=1,
vertex.label.degree=lab.locs,
vertex.label.family="sans",
vertex.label.size=1,
#     edge.label.cex=0.4,
ylim=c(-1,1), xlim=c(-1,1), asp=1, margins=10
)
dev.off()
tiff("ana-network.tiff", height=5600, width = 5600, units="px", res=300)
plot.igraph(network, rescale=F, layout=layout.circle,
vertex.label=paste(my_labels, ranked_list, sep="\n"),
#vertex.label= sums20,
vertex.size=logb(ranked_list, b=3),
#     edge.label=E(network)$weight,
edge.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
edge.label.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
#             edge.label.x=center_igraph_edges(network, "x"),
#             edge.label.y=center_igraph_edges(network, "y"),
vertex.label.cex=1,
vertex.label.dist=1,
vertex.label.degree=lab.locs,
vertex.label.family="sans",
vertex.label.size=3,
#     edge.label.cex=0.4,
ylim=c(-1,1), xlim=c(-1,1), asp=1, margins=10
)
dev.off()
tiff("ana-network.tiff", height=5600, width = 5600, units="px", res=300)
plot.igraph(network, rescale=F, layout=layout.circle,
vertex.label=paste(my_labels, ranked_list, sep="\n"),
#vertex.label= sums20,
vertex.size=logb(ranked_list, b=3),
#     edge.label=E(network)$weight,
edge.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
edge.label.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
#             edge.label.x=center_igraph_edges(network, "x"),
#             edge.label.y=center_igraph_edges(network, "y"),
vertex.label.cex=3,
vertex.label.dist=1,
vertex.label.degree=lab.locs,
vertex.label.family="sans",
#     edge.label.cex=0.4,
ylim=c(-1,1), xlim=c(-1,1), asp=1, margins=10
)
dev.off()
tiff("ana-network.tiff", height=5600, width = 5600, units="px", res=300)
plot.igraph(network, rescale=F, layout=layout.circle,
vertex.label=paste(my_labels, ranked_list, sep="\n"),
#vertex.label= sums20,
vertex.size=logb(ranked_list, b=3),
#     edge.label=E(network)$weight,
edge.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
edge.label.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
#             edge.label.x=center_igraph_edges(network, "x"),
#             edge.label.y=center_igraph_edges(network, "y"),
vertex.label.cex=3,
vertex.label.dist=1.5,
vertex.label.degree=lab.locs,
vertex.label.family="sans",
#     edge.label.cex=0.4,
ylim=c(-1,1), xlim=c(-1,1), asp=1, margins=10
)
dev.off()
tiff("ana-network.tiff", height=5600, width = 5600, units="px", res=300)
plot.igraph(network, rescale=F, layout=layout.circle,
vertex.label=paste(my_labels, ranked_list, sep="\n"),
#vertex.label= sums20,
vertex.size=logb(ranked_list, b=3),
#     edge.label=E(network)$weight,
edge.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
edge.label.color=num_to_rb(E(network)$weight,
min(E(network)$weight),
max(E(network)$weight)),
#             edge.label.x=center_igraph_edges(network, "x"),
#             edge.label.y=center_igraph_edges(network, "y"),
vertex.label.cex=3,
vertex.label.dist=1.5,
vertex.label.degree=lab.locs,
vertex.label.family="sans",
#     edge.label.cex=0.4,
ylim=c(-1.1,1.1), xlim=c(-1.1,1.1), asp=1, margins=10
)
dev.off()
fastpaircox2<-function(data, variables){
covs<-variables
#return(covs)
#stop()
flatcovs<-str_flatten(covs, collapse=" & ")
#return(flatcovs)
#stop()
dims<-subset.find(data, flatcovs)
data<-data[!is.na(data[dims[1]]),]
data[dims[1]]<-sapply(data[dims[1]], function(x){paste0(names(data[dims[1]]), x)})
data<-data[!is.na(data[dims[2]]),]
data[dims[2]]<-sapply(data[dims[2]], function(x){paste0(names(data[dims[2]]), x)})
subs<-subset.make(data, dims)
Group<-flatcovs
notNA<-apply(is.na(subs), 1, any)
subs<-subs[!notNA,]
data2<-unite(subs, Group, sep=" ")
subs<-cbind(data[!notNA,1:2],data2)
uni<-coxph(Surv(Survival.Months, Vital.Status) ~ Group, data=subs)
variables<-str_remove(names(uni$coefficients), "Group")
#
n<-sapply(variables, function(x){sum(subs$Group==x)})
#
cox_df<-data.frame(variable=variables,
n=n,
blank=paste(rep(" ", 20), collapse = " "),
est=exp(coef(uni)),
lower=exp(confint(uni)[,1]),
upper=exp(confint(uni)[,2]),
display=paste0(round(exp(coef(uni)), 2), " (",round(exp(confint(uni)[,1]),2),"-", round(exp(confint(uni)[,2]),2), ")"),
pval=tidy(uni)$p.value)
names(cox_df)<-c("Variable", "n", "", "est", "lower", "upper", "HR (95% CI)", "P value")
cox_df<-cox_df[order(cox_df$est),]
View(cox_df)
p<-forest(cox_df[,c(1:3, 7:8)],
est = cox_df$est,
lower = cox_df$lower,
upper = cox_df$upper,
sizes = 0.5,
ci_column = 3,
ref_line = 1,
arrow_lab = c("Beneficial", "Detrimental"),
xlim = c(0.25, 4.1),
ticks_at = c(0.5, 1, 2,3,4))
return(p)
}
survplot("Obesity & Afib", covs=c('Obesity', 'Afib'), data=data.frame(basic[c(2,3)], obaf), groups=4)
obaf<-subset.make(big, subset.find(big, "Obesity & Afib"))
survplot("Obesity & Afib", covs=c('Obesity', 'Afib'), data=data.frame(basic[c(2,3)], obaf), groups=4)
head(obaf)
obaf<-subset.make(big, subset.find(big, "Obesity & Afib"))
obaf
fastpaircox2<-function(data, variables){
covs<-variables
#return(covs)
#stop()
flatcovs<-str_flatten(covs, collapse=" & ")
#return(flatcovs)
#stop()
dims<-subset.find(data, flatcovs)
data<-data[!is.na(data[dims[1]]),]
data[dims[1]]<-sapply(data[dims[1]], function(x){paste0(names(data[dims[1]]), x)})
data<-data[!is.na(data[dims[2]]),]
data[dims[2]]<-sapply(data[dims[2]], function(x){paste0(names(data[dims[2]]), x)})
subs<-subset.make(data, dims)
Group<-flatcovs
notNA<-apply(is.na(subs), 1, any)
subs<-subs[!notNA,]
data2<-unite(subs, Group, sep=" ")
subs<-cbind(data[!notNA,1:2],data2)
uni<-coxph(Surv(Survival.Months, Vital.Status) ~ Group, data=subs)
variables<-str_remove(names(uni$coefficients), "Group")
#
n<-sapply(variables, function(x){sum(subs$Group==x)})
#
cox_df<-data.frame(variable=variables,
n=n,
blank=paste(rep(" ", 20), collapse = " "),
est=exp(coef(uni)),
lower=exp(confint(uni)[,1]),
upper=exp(confint(uni)[,2]),
display=paste0(round(exp(coef(uni)), 2), " (",round(exp(confint(uni)[,1]),2),"-", round(exp(confint(uni)[,2]),2), ")"),
pval=tidy(uni)$p.value)
names(cox_df)<-c("Variable", "n", "", "est", "lower", "upper", "HR (95% CI)", "P value")
cox_df<-cox_df[order(cox_df$est),]
View(cox_df)
p<-forest(cox_df[,c(1:3, 7:8)],
est = cox_df$est,
lower = cox_df$lower,
upper = cox_df$upper,
sizes = 0.5,
ci_column = 3,
ref_line = 1,
arrow_lab = c("Beneficial", "Detrimental"),
xlim = c(0.25, 4.1),
ticks_at = c(0.5, 1, 2,3,4))
return(p)
}
subset.plot(data.frame(Survival.Months=basic$Survival.Months, Vital.Status=basic$Vital.Status, big), subset.find(big, "Obesity & Afib")+2)
obaf<-subset.make(big, subset.find(big, "Obesity & Afib"))
head(obaf)
subset.find(big, "Obesity & Afib")
subset.find
names(big)
obaf<-subset.make(big, subset.find(ci, "Obesity & Afib"))
obaf<-subset.make(ci, subset.find(ci, "Obesity & Afib"))
obaf
survplot("Obesity & Afib", covs=c('Obesity', 'Afib'), data=data.frame(basic[c(2,3)], obaf), groups=4)
obaf<-subset.make(ci, subset.find(ci, "Obesity & Afib"))
obaf<-data.frame(basic[c(2,3)], obaf)
survplot("Obesity & Afib", covs=c('Obesity', 'Afib'), data=obaf, groups=4)
fastpaircox2(obaf)
fastpaircox2(data.frame(basic[c(2,3)], ci), "Obesity & Afib")
source("C:/Users/jardi/Brown Dropbox/Jonathan Arditi/Documents/RwdLocal/GBMSurvey/gbm_survival/ana_network.R", echo=TRUE)
#returnwd()
#IDH_remove=TRUE
source("gbm_survival/GBM_survey_quickload.R")
#returnwd()
#IDH_remove=TRUE
source("00-data-read-clean.R")
df<-data.frame(basic[c(2,3,4,5,7)], trt[c(3,7)],
HTN=ci$HTN, HLD=ci$HLD, Resection=trt$Resection, Bevacizumab=trt$Bevacizumab,
Diabetes=ci$Diab, Obesity=ci$Obesity, Chemo=trt$`Initial.Chemo.w/radiation`,
Addl_malig.=maligs$Additional.Malignancy, Afib=ci$Afib,
COPD=ci$COPD, Apnea=ci$Apnea, Stroke=ci$Stroke)
aa_fit <-aareg(Surv(Survival.Months, Vital.Status) ~ Age + KPS +
Resection + Bevacizumab + HTN + HLD + Diabetes + Obesity + Addl_malig.  + Chemo + Afib + Apnea + COPD + Stroke,
data = df)
library(survminer)
library(ggfortify)
library(survival)
aa_fit <-aareg(Surv(Survival.Months, Vital.Status) ~ Age + KPS +
Resection + Bevacizumab + HTN + HLD + Diabetes + Obesity + Addl_malig.  + Chemo + Afib + Apnea + COPD + Stroke,
data = df)
autoplot(aa_fit)
obaf<-subset.make(ci, subset.find(ci, "Obesity & Afib"))
source("C:/Users/jardi/Brown Dropbox/Jonathan Arditi/Documents/RwdLocal/GBMSurvey/gbm_survival/1a-functions.R", echo=TRUE)
obaf<-subset.make(ci, subset.find(ci, "Obesity & Afib"))
subset.make<-function(data, ...){
out<-data[c(...)]
out
}
subset.find<-function(data, stri){
which(str_detect(colnames(data), str_replace(stri, " & ", "|")))
}
obaf<-subset.make(ci, subset.find(ci, "Obesity & Afib"))
obaf<-data.frame(basic[c(2,3)], obaf)
obaf
survplot("Obesity & Afib", covs=c('Obesity', 'Afib'), data=obaf, groups=4)
survplotcombn<-function(title="None", covs, data, groups=4, legend.coords=c(0.8,0.8), legend.rows=6){
#return(covs)
#stop()
flatcovs<-str_flatten(covs, collapse=" & ")
#return(flatcovs)
#stop()
subs<-subset.make(data, subset.find(data, flatcovs))
name<-flatcovs
notNA<-apply(is.na(subs), 1, any)
subs<-subs[!notNA,]
data2<-unite(subs, name, sep=" ")
subs<-cbind(data[!notNA,1:2],data2)
#colnames(subs)[1:2]<-c("Survival.Months", "Vital.Status")
form<-formula(paste("Surv(Survival.Months, Vital.Status) ~", "name"))
test2<-do.call(survfit2, args=list(formula=form, data=subs))
lens<-test2$strata
x<-test2$time[1:lens[1]]
y<-test2$time[(lens[1]+1):length(test2$time)]
ll<-min(lens)
# Tick function/Parameters 6 interval
ticks<-0:37*12 #(start,end,how many ticks inclusive from start to end)
#ticks_mgmt = linspace(0, 210, 36) #(start,end,how many ticks inclusive from start to end)
ticks_str<-paste(ticks)
minorInds<-which(ticks %% 12 != 0) #Ticks on how many interval
ticks_str[minorInds]<-""
tbls<-table(subs$name)
labels<-lapply(1:length(tbls), function(i){paste(names(tbls[i]), tbls[i], sep=", n=")})
#labels<-lapply()
if(groups==1){
palette<-c("black")
} else if (groups==2){
palette<-c("blue", "red")
} else if (groups==3){
palette<-c("red", "black", "blue")
} else if (groups==4){
palette<-c("green", "blue", "black", "red")
} else if (groups==5){
palette<-c("green", "blue", "purple", "black", "red")
} else if (groups==6){
palette<-c("yellow", "green", "blue", "purple", "black", "red")
}
if (title=="None"){
title<-str_flatten(covs, collapse=" & ")
}
obj<-survminer::ggsurvplot(test2,
xlim=c(0, 144),
break.x.by = 6,
ylab="Fraction Surviving",
xlab="Months",
conf.int = TRUE,
pval= T,
pval.coord=c(-0.5,0),
pval.size=4,
#risk.table = T, risk.table.title="",
legend=legend.coords,
legend.labs=unlist(labels),
legend.title="",
surv.scale = "percent", palette=palette,
#title=paste("Survival:", covars, "| Proportional=", verdict)
title=title)
p<-obj$plot
p<-p+
theme(legend.text = element_text(size = 15))+
theme(plot.title = element_text(hjust = 0.5, size=20))+
guides(colour = guide_legend(nrow=legend.rows))+
theme(axis.title.x =element_text(size = 12))+
theme(axis.title.y = element_text(size = 12))+
theme(axis.text.x =  element_text(size=10))+
theme(axis.text.y =  element_text(size=10))+
#    guides(color = guide_legend(override.aes = list(shape=NA)))+
scale_x_continuous(breaks=ticks, labels=ticks_str)
return(p)
}
survplotcombn("Atrial Fibrillation & Obesity",
covs=c("Afib", "Obesity"),
data=data.frame(basic[c(2,3)], Afib=ci$Afib, Obesity=ci$Obesity))
survplotcombn<-function(title="None", covs, data, groups=4, legend.coords=c(0.8,0.8), legend.rows=6){
#return(covs)
#stop()
flatcovs<-str_flatten(covs, collapse=" & ")
#return(flatcovs)
#stop()
subs<-subset.make(data, subset.find(data, flatcovs))
name<-flatcovs
notNA<-apply(is.na(subs), 1, any)
subs<-subs[!notNA,]
data2<-unite(subs, name, sep=" ")
subs<-cbind(data[!notNA,1:2],data2)
#colnames(subs)[1:2]<-c("Survival.Months", "Vital.Status")
form<-formula(paste("Surv(Survival.Months, Vital.Status) ~", "name"))
test2<-do.call(survfit2, args=list(formula=form, data=subs))
lens<-test2$strata
x<-test2$time[1:lens[1]]
y<-test2$time[(lens[1]+1):length(test2$time)]
ll<-min(lens)
# Tick function/Parameters 6 interval
ticks<-0:37*12 #(start,end,how many ticks inclusive from start to end)
#ticks_mgmt = linspace(0, 210, 36) #(start,end,how many ticks inclusive from start to end)
ticks_str<-paste(ticks)
minorInds<-which(ticks %% 12 != 0) #Ticks on how many interval
ticks_str[minorInds]<-""
tbls<-table(subs$name)
labels<-lapply(1:length(tbls), function(i){paste(names(tbls[i]), tbls[i], sep=", n=")})
#labels<-lapply()
if(groups==1){
palette<-c("black")
} else if (groups==2){
palette<-c("blue", "red")
} else if (groups==3){
palette<-c("red", "black", "blue")
} else if (groups==4){
palette<-c("green", "blue", "black", "red")
} else if (groups==5){
palette<-c("green", "blue", "purple", "black", "red")
} else if (groups==6){
palette<-c("yellow", "green", "blue", "purple", "black", "red")
}
if (title=="None"){
title<-str_flatten(covs, collapse=" & ")
}
obj<-survminer::ggsurvplot(test2,
xlim=c(0, 144),
break.x.by = 6,
ylab="Fraction Surviving",
xlab="Months",
conf.int = TRUE,
pval= F,
#pval.coord=c(-0.5,0),
#pval.size=4,
#risk.table = T, risk.table.title="",
legend=legend.coords,
legend.labs=unlist(labels),
legend.title="",
surv.scale = "percent", palette=palette,
#title=paste("Survival:", covars, "| Proportional=", verdict)
title=title)
p<-obj$plot
p<-p+
theme(legend.text = element_text(size = 15))+
theme(plot.title = element_text(hjust = 0.5, size=20))+
guides(colour = guide_legend(nrow=legend.rows))+
theme(axis.title.x =element_text(size = 12))+
theme(axis.title.y = element_text(size = 12))+
theme(axis.text.x =  element_text(size=10))+
theme(axis.text.y =  element_text(size=10))+
#    guides(color = guide_legend(override.aes = list(shape=NA)))+
scale_x_continuous(breaks=ticks, labels=ticks_str)
return(p)
}
survplotcombn("Atrial Fibrillation & Obesity",
covs=c("Afib", "Obesity"),
data=data.frame(basic[c(2,3)], Afib=ci$Afib, Obesity=ci$Obesity))
setwd("../final.figures")
tiff("5c-surv.tiff", height=1800, width = 2700, units="px", res=300)
survplotcombn("Atrial Fibrillation & Obesity",
covs=c("Afib", "Obesity"),
data=data.frame(basic[c(2,3)], Afib=ci$Afib, Obesity=ci$Obesity))
dev.off()
setwd("../gbm_survival")
rankings<-apply(ci, 2, function(x){sum(has(x), na.rm = TRUE)})
rankings<-c(rankings, Addl.Maligs=sum(has(maligs$Additional.Malignancy)))
ranked_list<-rankings[order(rankings, decreasing = TRUE)]
ranked_list<-ranked_list[1:25]
ranked_List<-ranked_list[-c(4,22,23,25)]
ranked_List
rankings<-apply(ci, 2, function(x){sum(has(x), na.rm = TRUE)})
rankings<-c(rankings, Addl.Maligs=sum(has(maligs$Additional.Malignancy)))
ranked_list<-rankings[order(rankings, decreasing = TRUE)]
ranked_list<-ranked_list[1:25]
ranked_List<-ranked_list[-c(4,22,23,25)]
ranked_List
big<-data.frame(ci[names(ci) %in% names(ranked_List)], Addl.Maligs=maligs$Additional.Malignancy)
names(big)
ranked_List
length(ranked_List)
rankings<-apply(ci, 2, function(x){sum(has(x), na.rm = TRUE)})
rankings<-c(rankings, Addl.Maligs=sum(has(maligs$Additional.Malignancy)))
ranked_list<-rankings[order(rankings, decreasing = TRUE)]
ranked_list<-ranked_list[1:25]
ranked_List<-ranked_list[-c(4,22,23,25)]
ranked_List
ranked_list
rankings<-apply(ci, 2, function(x){sum(has(x), na.rm = TRUE)})
rankings<-c(rankings, Addl.Maligs=sum(has(maligs$Additional.Malignancy)))
ranked_list<-rankings[order(rankings, decreasing = TRUE)]
ranked_list<-ranked_list[1:25]
ranked_List<-ranked_list[-c(4,11,19,22,23,24)]
ranked_List
big<-data.frame(ci[names(ci) %in% names(ranked_List)], Addl.Maligs=maligs$Additional.Malignancy)
names(big)
?survfit
?surv_pvalue
??aareg
?aareg
names(big)
survplotcombn("Avastin & Hypertension", data.frame(big, Bev=trt$Bevacizumab), groups=4, legend.coords=c(0.8,0.8), legend.rows=4, 'HTN', 'Bev')
survplotcombn("Avastin & Hypertension", data.frame(big, Bev=trt$Bevacizumab), groups=4, legend.coords=c(0.8,0.8), legend.rows=4, 'HTN', 'Bev')
trt$Bevacizumab
survplotcombn("Avastin & Hypertension", covs=c('HTN', 'Bev'), data=data.frame(big, Bev=trt$Bevacizumab), groups=4, legend.coords=c(0.8,0.8), legend.rows=4)
survplotcombn("Avastin & Hypertension", covs=c('HTN', 'Bev'), data=data.frame(basic[2,3],big, Bev=trt$Bevacizumab), groups=4, legend.coords=c(0.8,0.8), legend.rows=4)
names(basic)
survplotcombn()
survplotcombn("Avastin & Hypertension", covs=c('HTN', 'Bev'), data=data.frame(basic[2,3], big, Bev=trt$Bevacizumab), groups=4, legend.coords=c(0.8,0.8), legend.rows=4)
survplotcombn("Avastin & Hypertension", covs=c('HTN', 'Bev'), data=data.frame(basic[2,3], HTN=ci$HTN, Bev=trt$Bevacizumab), groups=4, legend.coords=c(0.8,0.8), legend.rows=4)
survplotcombn("Avastin & Hypertension", covs=c('HTN', 'Bev'), data=data.frame(Vital.Status=basic$Vital.Status, Survival.Months=basic$Survival.Months, HTN=ci$HTN, Bev=trt$Bevacizumab), groups=4, legend.coords=c(0.8,0.8), legend.rows=4)
survplotcombn("Avastin & Hypertension", covs=c('Bev', "HTN"), data=data.frame(Vital.Status=basic$Vital.Status, Survival.Months=basic$Survival.Months, HTN=ci$HTN, Bev=trt$Bevacizumab), groups=4, legend.coords=c(0.8,0.8), legend.rows=4)
survplotcombn("Avastin & Hypertension", covs=c('Bev', "HTN"), data=data.frame(Vital.Status=basic$Vital.Status, Survival.Months=basic$Survival.Months, Bev=trt$Bevacizumab, HTN=ci$HTN, ), groups=4, legend.coords=c(0.8,0.8), legend.rows=4)
survplotcombn("Avastin & Hypertension", covs=c('Bev', "HTN"), data=data.frame(Vital.Status=basic$Vital.Status, Survival.Months=basic$Survival.Months, Bev=trt$Bevacizumab, HTN=ci$HTN), groups=4, legend.coords=c(0.8,0.8), legend.rows=4)
